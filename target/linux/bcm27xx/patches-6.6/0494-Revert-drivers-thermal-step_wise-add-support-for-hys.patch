From 641571d84e8b1e173fde4c66bf7a377f05b1c7b4 Mon Sep 17 00:00:00 2001
From: Dom Cobley <popcornmix@gmail.com>
Date: Wed, 13 Sep 2023 14:11:38 +0100
Subject: [PATCH 494/706] Revert "drivers: thermal: step_wise: add support for
 hysteresis"

This reverts commit 24e74e896e9930476c922ac5a53f9bc3afd80337.
---
 drivers/thermal/gov_step_wise.c | 33 ++++-----------------------------
 1 file changed, 4 insertions(+), 29 deletions(-)

--- a/drivers/thermal/gov_step_wise.c
+++ b/drivers/thermal/gov_step_wise.c
@@ -17,11 +17,11 @@
 #include "thermal_core.h"
 
 /*
- * If the temperature is higher than a hysteresis temperature,
+ * If the temperature is higher than a trip point,
  *    a. if the trend is THERMAL_TREND_RAISING, use higher cooling
  *       state for this trip point
  *    b. if the trend is THERMAL_TREND_DROPPING, do nothing
- * If the temperature is lower than a hysteresis temperature,
+ * If the temperature is lower than a trip point,
  *    a. if the trend is THERMAL_TREND_RAISING, do nothing
  *    b. if the trend is THERMAL_TREND_DROPPING, use lower cooling
  *       state for this trip point, if the cooling state already
@@ -81,8 +81,6 @@ static void update_passive_instance(stru
 
 static void thermal_zone_trip_update(struct thermal_zone_device *tz, int trip_id)
 {
-	int trip_temp, hyst_temp;
-	enum thermal_trip_type trip_type;
 	enum thermal_trend trend;
 	struct thermal_instance *instance;
 	struct thermal_trip trip;
@@ -98,37 +96,14 @@ static void thermal_zone_trip_update(str
 		trace_thermal_zone_trip(tz, trip_id, trip.type);
 	}
 
-	tz->ops->get_trip_temp(tz, trip_id, &trip_temp);
-	hyst_temp = trip_temp;
-	if (tz->ops->get_trip_hyst) {
-		tz->ops->get_trip_hyst(tz, trip_id, &hyst_temp);
-		hyst_temp = trip_temp - hyst_temp;
-	}
-	tz->ops->get_trip_type(tz, trip_id, &trip_type);
-
-	trend = get_tz_trend(tz, trip_id);
-
-	dev_dbg(&tz->device,
-		"Trip%d[type=%d,temp=%d,hyst=%d]:trend=%d,throttle=%d\n",
-		trip_id, trip_type, trip.temperature, hyst_temp, trend, throttle);
+	dev_dbg(&tz->device, "Trip%d[type=%d,temp=%d]:trend=%d,throttle=%d\n",
+				trip_id, trip.type, trip.temperature, trend, throttle);
 
 	list_for_each_entry(instance, &tz->thermal_instances, tz_node) {
 		if (instance->trip != trip_id)
 			continue;
 
 		old_target = instance->target;
-		throttle = false;
-		/*
-		 * Lower the mitigation only if the temperature
-		 * goes below the hysteresis temperature.
-		 */
-		if (tz->temperature >= trip_temp ||
-		   (tz->temperature >= hyst_temp &&
-		   old_target != THERMAL_NO_TARGET)) {
-			throttle = true;
-			trace_thermal_zone_trip(tz, trip, trip_type);
-		}
-
 		instance->target = get_target_state(instance, trend, throttle);
 		dev_dbg(&instance->cdev->device, "old_target=%d, target=%d\n",
 					old_target, (int)instance->target);
